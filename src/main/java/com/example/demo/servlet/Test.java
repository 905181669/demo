package com.example.demo.servlet;

/**
 * @author: luozijian
 * @date: 2022/3/22
 * @description:
 */
public class Test {
}

/**
1. 面试官你好，我叫xxx，2014年毕业于广东工业大学，先后在拓尔思大数据有限公司和租租车工作，
        在租租车工作期间，主要参与过三个大项目，

        第一个是租租车的全媒体工作平台，我主要是负责客服软电话系统，工单系统，客服监控系统等的编码工作，
        为用户和客服提供电话、在线渠道的沟通能力；

        第二个是参与了租租车的对外统一api网关系统，基于netty和http请求全链路异步的方式，
        为公司提供了http请求的统一网关入口；

        第三个是重构了租租车的订单系统，
        主要是负责基于rocketmq的分布式事务消息实现下单过程中的事务功能，
        同时基于redis的队列功能实现了rocketmq故障转移和降级方案


        租租车全媒体工作平台的难点主要在于客服业务的复杂性，
        我们的客服在工作上我们把它区分了两大类型，一个是对外的工作，
        比如实时接待用户的来电咨询，解决售后问题等，一个是对内的工作，
        比如收到用户的诉求后，没办法现场解决的问题，就需要创建工单并进行跟进，
        因此客服的工作状态是随时改变的，我们利用有限状态机解决了这个问题，
        把客服的状态分为了在线、就绪、休息、跟进、会议培训、下线、呼叫中、话后处理等状态，
        每一个状态的切换需要不同的事件驱动，因此我在后台通过netty的websocket实现了事件处理器，根据前端客服不同的指令，
        用不同的指令处理器进行对应的业务逻辑，这个整个客服的工作就在这一套状态机上有序进行；
        同时，通过对客服状态机的监控，主管可以很轻松的管理客服的工作，
        举个例子，比如早上10点是业务高峰期，必须保证起码有10个客服需要在就绪状态，
        那么客服就可以通过后台设置10-11点的就绪人数保底10人，这样就可以保障充足的客服人数资源；

        业务难点二是：客服的任务有效分配问题：我们呼叫中心在收到用户的来电咨询或者在线咨询时，
        如何有效的分配到具体的目标客服进行处理，因此这里的分配策略是动态的，租车行业是有淡旺季区分，
        因此在淡旺季的分配策略会有所不同，基于此场景，我应用了策略模式，把每一个分配的策略抽象成一个策略算法，
        淡季时分配策略是电话和在线任务均分策略，旺季时的分配策略是电话和在线任务不均分策略，还有一个是熟客原则；

        最后再介绍一个业务场景优化点是：延时通知功能，我们有个场景就是需要通知客服切跟进、
        会议培训等非就绪状态及时就绪的功能，一开始我是通过每分钟轮询数据库，把客服的状态都取出来，
        判断客服状态是否已经达到触发提醒上线的要求，缺点：效率低，通过优化，改为利用kafka的延时通知


        租租车统一网关系统难点：高并发高可用
        1. 基于netty的全链路异步流程；
        2. 解析http协议：只需要在netty的pipeLine中配置HttpRequestDecoder和HttpObjectAggregator。
        3. 堆内存泄露的排查过程：利用反射获取 PlatformDepedent 类的DIRECT_MEMORY_COUNTER进行观察
        4. 由于使用netty的http客户端，没有复用http连接池，导致socket对象增多，产生full gc，使用okhttp复用连接池


        订单系统难点：
        1. 解耦，通过引入rocketmq事务消息解决耦合问题
        2. 基于redis队列的备用方案；
        3. 基于canal+es的复杂场景搜索；
        4. 基于用户id的hash路由分库分表

 *
 */